[25/03/19 22:18:11] [conf.py:  210]: PyTorch Version: torch=1.12.1+cu113, cuda=11.3, cudnn=8302
[25/03/19 22:18:11] [conf.py:  212]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: ./ckpt
CORRUPTION:
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [5, 4, 3, 2, 1]
  TYPE: ['gaussian_noise', 'shot_noise', 'impulse_noise', 'defocus_blur', 'glass_blur', 'motion_blur', 'zoom_blur', 'snow', 'frost', 'fog', 'brightness', 'contrast', 'elastic_transform', 'pixelate', 'jpeg_compression']
CUDNN:
  BENCHMARK: True
DATA_DIR: ./data
DESC: 
LOG_DEST: tent_proxy_250319_221811.txt
LOG_TIME: 250319_221811
MODEL:
  ADAPTATION: tent_proxy
  ARCH: Resnet18
  EPISODIC: False
OPTIM:
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.0002
  METHOD: Adam
  MOMENTUM: 0.9
  NESTEROV: True
  STEPS: 1
  WD: 0.0
PROXY:
  BG_EMBEDDING_SIZE: 512
  DELTA: 2.0
  DISABLE_MU: False
  EMBEDDING_SIZE: 512
  NO_PROXY: False
  NUM_DIMS: 3
  NUM_LOCAL: 5
  NUM_NEIGHBORS: 10
  NUM_PROXIES: 100
  ONLY_PROXY: False
  PROJECTED_POWER: 1.0
  PROXY_NORM: True
  RESIDUE_POWER: 1.0
  SIGMA: 1.0
  TOPK: 5
  USE_ADDITIVE: False
  USE_GAUSSIAN_SIM: False
  USE_PROJECTED: True
  VIEW: 0
RNG_SEED: 1
SAVE_DIR: ./output
TEST:
  BATCH_SIZE: 200
[25/03/19 22:18:11] [cifar10c.py:   74]: test-time adaptation: TENT-PROXY
[25/03/19 22:18:12] [cifar10c.py:  238]: model for adaptation (tent_proxy): Resnet18(
  (model): ResNet(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
    (relu): ReLU(inplace=True)
    (maxpool): Identity()
    (layer1): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      )
      (1): BasicBlock(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      )
    )
    (layer2): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (downsample): Sequential(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      )
    )
    (layer3): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (downsample): Sequential(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      )
    )
    (layer4): Sequential(
      (0): BasicBlock(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (downsample): Sequential(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        )
      )
      (1): BasicBlock(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
        (relu): ReLU(inplace=True)
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
      )
    )
    (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
    (fc): Linear(in_features=512, out_features=1000, bias=True)
    (gap): AdaptiveAvgPool2d(output_size=1)
    (gmp): AdaptiveMaxPool2d(output_size=1)
    (embedding_g): Linear(in_features=512, out_features=1024, bias=True)
  )
  (classifier): Linear(in_features=1024, out_features=10, bias=True)
  (embedding_f): Linear(in_features=512, out_features=512, bias=True)
)
[25/03/19 22:18:12] [cifar10c.py:  239]: params for adaptation: ['model.bn1.weight', 'model.bn1.bias', 'model.layer1.0.bn1.weight', 'model.layer1.0.bn1.bias', 'model.layer1.0.bn2.weight', 'model.layer1.0.bn2.bias', 'model.layer1.1.bn1.weight', 'model.layer1.1.bn1.bias', 'model.layer1.1.bn2.weight', 'model.layer1.1.bn2.bias', 'model.layer2.0.bn1.weight', 'model.layer2.0.bn1.bias', 'model.layer2.0.bn2.weight', 'model.layer2.0.bn2.bias', 'model.layer2.0.downsample.1.weight', 'model.layer2.0.downsample.1.bias', 'model.layer2.1.bn1.weight', 'model.layer2.1.bn1.bias', 'model.layer2.1.bn2.weight', 'model.layer2.1.bn2.bias', 'model.layer3.0.bn1.weight', 'model.layer3.0.bn1.bias', 'model.layer3.0.bn2.weight', 'model.layer3.0.bn2.bias', 'model.layer3.0.downsample.1.weight', 'model.layer3.0.downsample.1.bias', 'model.layer3.1.bn1.weight', 'model.layer3.1.bn1.bias', 'model.layer3.1.bn2.weight', 'model.layer3.1.bn2.bias', 'model.layer4.0.bn1.weight', 'model.layer4.0.bn1.bias', 'model.layer4.0.bn2.weight', 'model.layer4.0.bn2.bias', 'model.layer4.0.downsample.1.weight', 'model.layer4.0.downsample.1.bias', 'model.layer4.1.bn1.weight', 'model.layer4.1.bn1.bias', 'model.layer4.1.bn2.weight', 'model.layer4.1.bn2.bias']
[25/03/19 22:18:12] [cifar10c.py:  240]: optimizer for adaptation: Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    eps: 1e-08
    foreach: None
    lr: 0.0002
    maximize: False
    weight_decay: 0.0
)
[25/03/19 22:18:12] [cifar10c.py:  100]: resetting model
[25/03/19 22:21:17] [cifar10c.py:  115]: error % [gaussian_noise5]: 34.53%
[25/03/19 22:21:17] [cifar10c.py:  100]: resetting model
[25/03/19 22:24:19] [cifar10c.py:  115]: error % [shot_noise5]: 33.71%
[25/03/19 22:24:19] [cifar10c.py:  100]: resetting model
[25/03/19 22:27:20] [cifar10c.py:  115]: error % [impulse_noise5]: 39.88%
[25/03/19 22:27:20] [cifar10c.py:  100]: resetting model
[25/03/19 22:30:22] [cifar10c.py:  115]: error % [defocus_blur5]: 30.94%
[25/03/19 22:30:22] [cifar10c.py:  100]: resetting model
[25/03/19 22:33:24] [cifar10c.py:  115]: error % [glass_blur5]: 40.45%
[25/03/19 22:33:24] [cifar10c.py:  100]: resetting model
[25/03/19 22:36:26] [cifar10c.py:  115]: error % [motion_blur5]: 33.00%
[25/03/19 22:36:26] [cifar10c.py:  100]: resetting model
[25/03/19 22:39:28] [cifar10c.py:  115]: error % [zoom_blur5]: 30.73%
[25/03/19 22:39:28] [cifar10c.py:  100]: resetting model
[25/03/19 22:42:30] [cifar10c.py:  115]: error % [snow5]: 36.64%
[25/03/19 22:42:30] [cifar10c.py:  100]: resetting model
[25/03/19 22:45:31] [cifar10c.py:  115]: error % [frost5]: 37.03%
[25/03/19 22:45:31] [cifar10c.py:  100]: resetting model
[25/03/19 22:48:33] [cifar10c.py:  115]: error % [fog5]: 36.79%
[25/03/19 22:48:33] [cifar10c.py:  100]: resetting model
[25/03/19 22:51:34] [cifar10c.py:  115]: error % [brightness5]: 28.91%
[25/03/19 22:51:34] [cifar10c.py:  100]: resetting model
[25/03/19 22:54:37] [cifar10c.py:  115]: error % [contrast5]: 45.16%
[25/03/19 22:54:37] [cifar10c.py:  100]: resetting model
[25/03/19 22:57:38] [cifar10c.py:  115]: error % [elastic_transform5]: 33.79%
[25/03/19 22:57:38] [cifar10c.py:  100]: resetting model
[25/03/19 23:00:39] [cifar10c.py:  115]: error % [pixelate5]: 29.82%
[25/03/19 23:00:39] [cifar10c.py:  100]: resetting model
[25/03/19 23:03:41] [cifar10c.py:  115]: error % [jpeg_compression5]: 30.86%
[25/03/19 23:03:41] [cifar10c.py:  100]: resetting model
[25/03/19 23:06:43] [cifar10c.py:  115]: error % [gaussian_noise4]: 32.69%
[25/03/19 23:06:43] [cifar10c.py:  100]: resetting model
[25/03/19 23:09:44] [cifar10c.py:  115]: error % [shot_noise4]: 31.71%
[25/03/19 23:09:44] [cifar10c.py:  100]: resetting model
[25/03/19 23:12:45] [cifar10c.py:  115]: error % [impulse_noise4]: 37.12%
[25/03/19 23:12:45] [cifar10c.py:  100]: resetting model
[25/03/19 23:15:47] [cifar10c.py:  115]: error % [defocus_blur4]: 27.86%
[25/03/19 23:15:47] [cifar10c.py:  100]: resetting model
[25/03/19 23:18:49] [cifar10c.py:  115]: error % [glass_blur4]: 40.80%
[25/03/19 23:18:49] [cifar10c.py:  100]: resetting model
